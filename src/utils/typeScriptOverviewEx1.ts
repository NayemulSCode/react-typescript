// "‡¶è‡¶á bugs ‡¶ó‡ßÅ‡¶≤‡ßã runtime ‡¶è ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶ß‡¶∞‡¶æ ‡¶™‡¶°‡¶º‡¶≤‡ßã‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ï‡¶ø development time ‡¶è‡¶á ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ß‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø ‡¶®‡¶æ?"

// ‡¶â‡¶§‡ßç‡¶§‡¶∞: ‡¶π‡ßç‡¶Ø‡¶æ‡¶Å! TypeScript ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ development time ‡¶è‡¶á ‡¶è‡¶á ‡¶∏‡¶¨ errors ‡¶ß‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§
// TypeScript compiler ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ code ‡¶≤‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶á ‡¶¨‡¶≤‡ßá ‡¶¶‡ßá‡¶Ø‡¶º ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶õ‡ßá, ‡¶Ø‡¶æ‡¶§‡ßá production ‡¶è ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá users ‡¶è‡¶á errors ‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡ßá‡•§

// JavaScript + Types = TypeScript
// Microsoft ‡¶è‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø
// JavaScript ‡¶è‡¶∞ superset
// Development time ‡¶è error catch ‡¶ï‡¶∞‡ßá
// Production ‡¶è JavaScript compile ‡¶π‡¶Ø‡¶º

// Basic syntax
const variableName: type = value;

// Type inference - TypeScript can often infer types
const inferredString = "Hello"; // TypeScript knows this is a string
const explicitString: string = "World"; // Explicitly declared string

// ‡¶è‡¶á JavaScript code ‡¶è ‡¶ï‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡¶®?
function calculateTotal(price, tax) {
  return price + tax;
}

const total = calculateTotal("100", "15"); // "10015" üò±
const total2 = calculateTotal(100); // NaN üò±
const total3 = calculateTotal(100, 15); //115 üò±

// ‡¶è‡¶á bugs ‡¶ó‡ßÅ‡¶≤‡ßã runtime ‡¶è ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶ß‡¶∞‡¶æ ‡¶™‡¶°‡¶º‡¶≤‡ßã‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ï‡¶ø development time ‡¶è‡¶á ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ß‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø ‡¶®‡¶æ?"

// JavaScript ‡¶è
function greet(name) {
  return "Hello " + name.toUpperCase();
}

greet(123); // Runtime error!

// TypeScript ‡¶è
function greet(name: string) {
  return "Hello " + name.toUpperCase();
}

greet(123); // Development time ‡¶è‡¶á error ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá! ‚úÖ

// Benefits ‡¶Ø‡¶æ highlight ‡¶ï‡¶∞‡¶¨‡ßá‡¶®:

// Early Error Detection
// Better IDE Support (autocomplete, refactoring)
// Self-documenting Code
// Easier Refactoring
// Team Collaboration improved
